{"version":3,"sources":["logo.svg","context/UserContext.js","layout/Header.js","components/UserCard.js","components/Repos.js","pages/Home.js","pages/Signin.js","pages/Signup.js","pages/PageNotFound.js","layout/Footer.js","App.js","Config/firebaseConfig.js","serviceWorker.js","index.js"],"names":["module","exports","UserContext","createContext","Header","context","useContext","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","to","className","NavbarText","user","email","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","setUser","tag","Link","UserCard","Card","src","avatar_url","CardBody","name","location","bio","hireable","followers","Repos","repos_url","repos","setRepos","fetchRepos","a","Axios","get","data","useEffect","ListGroup","map","repo","ListGroupItem","key","id","language","description","Home","query","setQuery","fetchDetails","console","log","toast","type","uid","Container","Row","Col","md","InputGroup","Input","value","onChange","e","target","placeholder","InputGroupAddon","addonType","Button","Signin","setEmail","password","setPassword","lg","Form","onSubmit","preventDefault","firebase","auth","signInWithEmailAndPassword","then","res","catch","error","message","position","CardHeader","FormGroup","row","Label","for","sm","CardFooter","block","Signup","createUserWithEmailAndPassword","PageNotFound","Footer","fluid","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","Provider","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0734fa66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import {createContext} from 'react';\r\n\r\nexport const UserContext = createContext();","import React, {useState, useContext} from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    NavbarText\r\n} from 'reactstrap';\r\nimport './Header.css'\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {UserContext} from '../context/UserContext';\r\n\r\nconst Header = () => {\r\n    const context = useContext(UserContext)\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const toggle = () => setIsOpen(!isOpen)\r\n\r\n    return (\r\n        <Navbar color=\"info\" light expand=\"md\">\r\n            <NavbarBrand><Link to=\"/\" className=\" brand\">Get-o-GitHub</Link></NavbarBrand>\r\n            <NavbarText className=\"text-white\">\r\n                {\r\n                    context.user?.email ? context.user.email : \"\"\r\n                }\r\n            </NavbarText>\r\n            {/*<img src={\"github.png\"} />*/}\r\n            <NavbarToggler onClick={toggle} />\r\n            <Collapse  isOpen={isOpen} navbar>\r\n                <Nav className=\"ml-auto\"  navbar>\r\n                    {\r\n                        context.user ? (\r\n                            <NavItem className=\"logout-box\">\r\n                                <NavLink onClick={() => {context.setUser(null)}} className=\"text-white\">Logout</NavLink>\r\n                            </NavItem>\r\n                        ) : (\r\n                            <>\r\n                            <NavItem className=\"boxxx\">\r\n                                <NavLink tag={Link} to=\"/signup\" className=\"text-white boxx\">\r\n                                    SignUp\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem className=\"boxxx\">\r\n                                <NavLink tag={Link} to=\"/signin\" className=\"text-white boxx\">\r\n                                    SignIn\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            </>\r\n                        )\r\n                    }\r\n                    \r\n                    \r\n                </Nav>\r\n            </Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Card, CardBody} from 'reactstrap';\r\n\r\nconst UserCard = ({user}) => {\r\n    return (\r\n        <Card className=\"text-center mt-3 mb-4\">\r\n            <img src={user.avatar_url} className=\"img-roundedCircle\" />\r\n            <CardBody>\r\n                <div className=\"text-primary\">{user.name}</div>\r\n                <div className=\"text-primary\">{user.location}</div>\r\n                <div className=\"text-primary\">{user.bio}</div>\r\n                <div className=\"text-info\">Available for hire: {user.hireable ? 'YES':'Nope'}</div>\r\n                <div className=\"text-info\">Followers {user.followers}</div>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n\r\n}\r\n\r\nexport default UserCard;","import React, {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\nconst Repos = ({repos_url}) => {\r\n    const [repos, setRepos] = useState([])\r\n\r\n    const fetchRepos = async () => {\r\n        const {data} = await Axios.get(repos_url)\r\n        setRepos(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchRepos()\r\n    }, [repos_url])\r\n\r\n    return (\r\n        <ListGroup>\r\n            {repos.map(repo => (\r\n                <ListGroupItem key={repo.id}>\r\n                    <div className=\"text-primary\">{repo.name}</div>\r\n                    <div className=\"text-secondary\">{repo.language}</div>\r\n                    <div className=\"text-info\">{repo.description}</div>\r\n                </ListGroupItem>\r\n            ))}\r\n        </ListGroup>\r\n    )\r\n} \r\n\r\nexport default Repos;","import React, { useState, useContext } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nimport {\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from \"reactstrap\";\r\n\r\nimport UserCard from \"../components/UserCard\";\r\nimport Repos from \"../components/Repos\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Home = () => {\r\n  const context = useContext(UserContext);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n\r\n  const fetchDetails = async () => {\r\n    try {\r\n      const { data } = await Axios.get(`https://api.github.com/users/${query}`);\r\n      setUser(data);\r\n      console.log({ data });\r\n    } catch (eror) {\r\n      toast(\"Not able to locate user\", { type: \"error\" });\r\n    }\r\n  };\r\n\r\n  //Put Anypage behind login\r\n\r\n  if (!context.user?.uid) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\" mt-3\">\r\n        <Col md=\"5\">\r\n          <InputGroup>\r\n            <Input\r\n              type=\"text\"\r\n              value={query}\r\n              onChange={e => setQuery(e.target.value)}\r\n              placeholder=\"Please provide the username\"\r\n            />\r\n            <InputGroupAddon addonType=\"append\">\r\n              <Button type=\"submit\" onClick={fetchDetails} color=\"primary\">\r\n                Fetch User\r\n              </Button>\r\n            </InputGroupAddon>\r\n          </InputGroup>\r\n          {user ? <UserCard user={user} /> : null}\r\n        </Col>\r\n        <Col md=\"7\">{user ? <Repos repos_url={user.repos_url} /> : null}</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, {useState, useContext} from 'react';\r\nimport {\r\n    Container,\r\n    Form,\r\n    Button,\r\n    FormGroup,\r\n    Label,\r\n    Col,\r\n    Input,\r\n    Row,\r\n    Card,\r\n    CardBody,\r\n    CardFooter,\r\n    CardHeader,\r\n} from 'reactstrap';\r\n\r\nimport firebase from 'firebase/app';\r\nimport {UserContext} from '../context/UserContext';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {toast} from 'react-toastify';\r\n\r\nconst Signin = () => {\r\n\r\n    const context = useContext(UserContext)\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleSignIn = () => {\r\n        firebase \r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then( res => {\r\n                console.log(res);\r\n                context.setUser({email: res.user.email, uid: res.user.uid})\r\n                })\r\n            .catch(error => {\r\n                console.log(error);\r\n                toast(error.message, {\r\n                    type: \"error\",\r\n                    position: \"bottom-right\"\r\n                })\r\n            })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        handleSignIn()\r\n    }\r\n\r\n    if (context.user?.uid) {\r\n        return <Redirect to=\"/\" />\r\n    }  \r\n    return (\r\n\t\t<Container className='text-center'>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col lg={6} className='offset-lg-3 mt-5'>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t<CardHeader className=''>SignIn Here</CardHeader>\r\n\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for='email' sm={3}>\r\n\t\t\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\tid='email'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Provide your email'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for='password' sm={3}>\r\n\t\t\t\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\t\t\tid='password'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Your password here'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t<CardFooter>\r\n\t\t\t\t\t\t\t\t<Button type='submit' block color='primary'>\r\n\t\t\t\t\t\t\t\t\tSign In\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</CardFooter>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n\r\n};\r\n\r\nexport default Signin;","import React, {useState, useContext} from 'react';\r\nimport {\r\n    Container,\r\n    Form,\r\n    Button,\r\n    FormGroup,\r\n    Label,\r\n    Col,\r\n    Input,\r\n    Row,\r\n    Card,\r\n    CardBody,\r\n    CardFooter,\r\n    CardHeader\r\n} from 'reactstrap';\r\n\r\nimport firebase from 'firebase/app';\r\nimport {UserContext} from '../context/UserContext';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {toast} from 'react-toastify';\r\n\r\nconst Signup = () => {\r\n\r\n    const context = useContext(UserContext)\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleSignUp = () => {\r\n        firebase \r\n            .auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then( res => {\r\n                console.log(res);\r\n                context.setUser({email: res.user.email, uid: res.user.uid})\r\n                })\r\n            .catch(error => {\r\n                console.log(error);\r\n                toast(error.message, {\r\n                    type: \"error\",\r\n                    position: \"bottom-right\"\r\n                })\r\n            })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        handleSignUp()\r\n    }\r\n\r\n    if (context.user?.uid) {\r\n        return <Redirect to=\"/\" />\r\n    }  \r\n    return (\r\n\t\t<Container className='text-center'>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col lg={6} className='offset-lg-3 mt-5'>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t<CardHeader className=''>SignUp Here</CardHeader>\r\n\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for='email' sm={3}>\r\n\t\t\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\tid='email'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Provide your email'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for='password' sm={3}>\r\n\t\t\t\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\t\t\tid='password'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Your password here'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t<CardFooter>\r\n\t\t\t\t\t\t\t\t<Button type='submit' block color='primary'>\r\n\t\t\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</CardFooter>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n\r\n};\r\n\r\nexport default Signup;","import React from 'react';\r\n\r\nconst PageNotFound = () => {\r\n    return(\r\n        <div>\r\n            <h1>Page Not Found</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport {Container} from 'reactstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Container fluid\r\n            tag=\"footer\"\r\n            className=\"text-center bg-info text-white fixed-bottom p-3\"\r\n        >Get-o-GitHub | Made with ❤️ by Aniket Kumar Sinha\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom'\n\n//toast\nimport {ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\n//firebase\nimport firebase from 'firebase/app';\nimport 'firebase/auth'\n\n//components\nimport Header from './layout/Header';\nimport Home from './pages/Home';\nimport Signin from './pages/Signin';\nimport Signup from './pages/Signup';\nimport PageNotFound from './pages/PageNotFound';\nimport {UserContext} from './context/UserContext';\nimport Footer from './layout/Footer';\n\nimport firebaseConfig from './Config/firebaseConfig';\n//init firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst App = () => {\n\n  const [user, setUser] = useState(null);\n\n\n  return (\n    <Router>\n      <ToastContainer />\n      <UserContext.Provider value={{user, setUser}}>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/signin\" component={Signin} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"*\" component={PageNotFound} />\n        </Switch>\n        <Footer />\n      </UserContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","export default {\r\n    apiKey: \"AIzaSyAK95PJkFfg4jtx9TU1zBnhCVdZHevsmFE\",\r\n    authDomain: \"github-account.firebaseapp.com\",\r\n    databaseURL: \"https://github-account.firebaseio.com\",\r\n    projectId: \"github-account\",\r\n    storageBucket: \"github-account.appspot.com\",\r\n    messagingSenderId: \"870155848437\",\r\n    appId: \"1:870155848437:web:24336546eabfc2783fd3bc\"\r\n  };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}